$date
	Mon Jan 02 02:31:11 2023
$end
$version
	ModelSim Version 10.1d
$end
$timescale
	1ns
$end
$scope module APB_Protocol_tb $end
$var reg 1 ! pclk $end
$var reg 1 " penable $end
$var reg 1 # pwrite $end
$var reg 1 $ transfer $end
$var reg 1 % Reset $end
$var reg 5 & write_paddr [4:0] $end
$var reg 5 ' apb_read_paddr [4:0] $end
$var reg 32 ( write_data [31:0] $end
$var reg 2 ) Psel [1:0] $end
$var reg 1 * rx $end
$var wire 1 + apb_read_data_out [31] $end
$var wire 1 , apb_read_data_out [30] $end
$var wire 1 - apb_read_data_out [29] $end
$var wire 1 . apb_read_data_out [28] $end
$var wire 1 / apb_read_data_out [27] $end
$var wire 1 0 apb_read_data_out [26] $end
$var wire 1 1 apb_read_data_out [25] $end
$var wire 1 2 apb_read_data_out [24] $end
$var wire 1 3 apb_read_data_out [23] $end
$var wire 1 4 apb_read_data_out [22] $end
$var wire 1 5 apb_read_data_out [21] $end
$var wire 1 6 apb_read_data_out [20] $end
$var wire 1 7 apb_read_data_out [19] $end
$var wire 1 8 apb_read_data_out [18] $end
$var wire 1 9 apb_read_data_out [17] $end
$var wire 1 : apb_read_data_out [16] $end
$var wire 1 ; apb_read_data_out [15] $end
$var wire 1 < apb_read_data_out [14] $end
$var wire 1 = apb_read_data_out [13] $end
$var wire 1 > apb_read_data_out [12] $end
$var wire 1 ? apb_read_data_out [11] $end
$var wire 1 @ apb_read_data_out [10] $end
$var wire 1 A apb_read_data_out [9] $end
$var wire 1 B apb_read_data_out [8] $end
$var wire 1 C apb_read_data_out [7] $end
$var wire 1 D apb_read_data_out [6] $end
$var wire 1 E apb_read_data_out [5] $end
$var wire 1 F apb_read_data_out [4] $end
$var wire 1 G apb_read_data_out [3] $end
$var wire 1 H apb_read_data_out [2] $end
$var wire 1 I apb_read_data_out [1] $end
$var wire 1 J apb_read_data_out [0] $end
$var integer 32 K i $end
$scope module A1 $end
$var wire 1 L pclk $end
$var wire 1 M penable $end
$var wire 1 N pwrite $end
$var wire 1 O transfer $end
$var wire 1 P Reset $end
$var wire 1 Q write_paddr [4] $end
$var wire 1 R write_paddr [3] $end
$var wire 1 S write_paddr [2] $end
$var wire 1 T write_paddr [1] $end
$var wire 1 U write_paddr [0] $end
$var wire 1 V apb_read_paddr [4] $end
$var wire 1 W apb_read_paddr [3] $end
$var wire 1 X apb_read_paddr [2] $end
$var wire 1 Y apb_read_paddr [1] $end
$var wire 1 Z apb_read_paddr [0] $end
$var wire 1 [ write_data [31] $end
$var wire 1 \ write_data [30] $end
$var wire 1 ] write_data [29] $end
$var wire 1 ^ write_data [28] $end
$var wire 1 _ write_data [27] $end
$var wire 1 ` write_data [26] $end
$var wire 1 a write_data [25] $end
$var wire 1 b write_data [24] $end
$var wire 1 c write_data [23] $end
$var wire 1 d write_data [22] $end
$var wire 1 e write_data [21] $end
$var wire 1 f write_data [20] $end
$var wire 1 g write_data [19] $end
$var wire 1 h write_data [18] $end
$var wire 1 i write_data [17] $end
$var wire 1 j write_data [16] $end
$var wire 1 k write_data [15] $end
$var wire 1 l write_data [14] $end
$var wire 1 m write_data [13] $end
$var wire 1 n write_data [12] $end
$var wire 1 o write_data [11] $end
$var wire 1 p write_data [10] $end
$var wire 1 q write_data [9] $end
$var wire 1 r write_data [8] $end
$var wire 1 s write_data [7] $end
$var wire 1 t write_data [6] $end
$var wire 1 u write_data [5] $end
$var wire 1 v write_data [4] $end
$var wire 1 w write_data [3] $end
$var wire 1 x write_data [2] $end
$var wire 1 y write_data [1] $end
$var wire 1 z write_data [0] $end
$var wire 1 { Psel [1] $end
$var wire 1 | Psel [0] $end
$var wire 1 + apb_read_data_out [31] $end
$var wire 1 , apb_read_data_out [30] $end
$var wire 1 - apb_read_data_out [29] $end
$var wire 1 . apb_read_data_out [28] $end
$var wire 1 / apb_read_data_out [27] $end
$var wire 1 0 apb_read_data_out [26] $end
$var wire 1 1 apb_read_data_out [25] $end
$var wire 1 2 apb_read_data_out [24] $end
$var wire 1 3 apb_read_data_out [23] $end
$var wire 1 4 apb_read_data_out [22] $end
$var wire 1 5 apb_read_data_out [21] $end
$var wire 1 6 apb_read_data_out [20] $end
$var wire 1 7 apb_read_data_out [19] $end
$var wire 1 8 apb_read_data_out [18] $end
$var wire 1 9 apb_read_data_out [17] $end
$var wire 1 : apb_read_data_out [16] $end
$var wire 1 ; apb_read_data_out [15] $end
$var wire 1 < apb_read_data_out [14] $end
$var wire 1 = apb_read_data_out [13] $end
$var wire 1 > apb_read_data_out [12] $end
$var wire 1 ? apb_read_data_out [11] $end
$var wire 1 @ apb_read_data_out [10] $end
$var wire 1 A apb_read_data_out [9] $end
$var wire 1 B apb_read_data_out [8] $end
$var wire 1 C apb_read_data_out [7] $end
$var wire 1 D apb_read_data_out [6] $end
$var wire 1 E apb_read_data_out [5] $end
$var wire 1 F apb_read_data_out [4] $end
$var wire 1 G apb_read_data_out [3] $end
$var wire 1 H apb_read_data_out [2] $end
$var wire 1 I apb_read_data_out [1] $end
$var wire 1 J apb_read_data_out [0] $end
$var wire 1 } rx $end
$var reg 1 ~ pready $end
$var reg 32 !! prdata [31:0] $end
$var wire 1 "! pwdata [31] $end
$var wire 1 #! pwdata [30] $end
$var wire 1 $! pwdata [29] $end
$var wire 1 %! pwdata [28] $end
$var wire 1 &! pwdata [27] $end
$var wire 1 '! pwdata [26] $end
$var wire 1 (! pwdata [25] $end
$var wire 1 )! pwdata [24] $end
$var wire 1 *! pwdata [23] $end
$var wire 1 +! pwdata [22] $end
$var wire 1 ,! pwdata [21] $end
$var wire 1 -! pwdata [20] $end
$var wire 1 .! pwdata [19] $end
$var wire 1 /! pwdata [18] $end
$var wire 1 0! pwdata [17] $end
$var wire 1 1! pwdata [16] $end
$var wire 1 2! pwdata [15] $end
$var wire 1 3! pwdata [14] $end
$var wire 1 4! pwdata [13] $end
$var wire 1 5! pwdata [12] $end
$var wire 1 6! pwdata [11] $end
$var wire 1 7! pwdata [10] $end
$var wire 1 8! pwdata [9] $end
$var wire 1 9! pwdata [8] $end
$var wire 1 :! pwdata [7] $end
$var wire 1 ;! pwdata [6] $end
$var wire 1 <! pwdata [5] $end
$var wire 1 =! pwdata [4] $end
$var wire 1 >! pwdata [3] $end
$var wire 1 ?! pwdata [2] $end
$var wire 1 @! pwdata [1] $end
$var wire 1 A! pwdata [0] $end
$var wire 1 B! paddr [4] $end
$var wire 1 C! paddr [3] $end
$var wire 1 D! paddr [2] $end
$var wire 1 E! paddr [1] $end
$var wire 1 F! paddr [0] $end
$var wire 1 G! PSEL1 $end
$var wire 1 H! PSEL2 $end
$var wire 1 I! prdata1 [31] $end
$var wire 1 J! prdata1 [30] $end
$var wire 1 K! prdata1 [29] $end
$var wire 1 L! prdata1 [28] $end
$var wire 1 M! prdata1 [27] $end
$var wire 1 N! prdata1 [26] $end
$var wire 1 O! prdata1 [25] $end
$var wire 1 P! prdata1 [24] $end
$var wire 1 Q! prdata1 [23] $end
$var wire 1 R! prdata1 [22] $end
$var wire 1 S! prdata1 [21] $end
$var wire 1 T! prdata1 [20] $end
$var wire 1 U! prdata1 [19] $end
$var wire 1 V! prdata1 [18] $end
$var wire 1 W! prdata1 [17] $end
$var wire 1 X! prdata1 [16] $end
$var wire 1 Y! prdata1 [15] $end
$var wire 1 Z! prdata1 [14] $end
$var wire 1 [! prdata1 [13] $end
$var wire 1 \! prdata1 [12] $end
$var wire 1 ]! prdata1 [11] $end
$var wire 1 ^! prdata1 [10] $end
$var wire 1 _! prdata1 [9] $end
$var wire 1 `! prdata1 [8] $end
$var wire 1 a! prdata1 [7] $end
$var wire 1 b! prdata1 [6] $end
$var wire 1 c! prdata1 [5] $end
$var wire 1 d! prdata1 [4] $end
$var wire 1 e! prdata1 [3] $end
$var wire 1 f! prdata1 [2] $end
$var wire 1 g! prdata1 [1] $end
$var wire 1 h! prdata1 [0] $end
$var wire 1 i! prdata2 [31] $end
$var wire 1 j! prdata2 [30] $end
$var wire 1 k! prdata2 [29] $end
$var wire 1 l! prdata2 [28] $end
$var wire 1 m! prdata2 [27] $end
$var wire 1 n! prdata2 [26] $end
$var wire 1 o! prdata2 [25] $end
$var wire 1 p! prdata2 [24] $end
$var wire 1 q! prdata2 [23] $end
$var wire 1 r! prdata2 [22] $end
$var wire 1 s! prdata2 [21] $end
$var wire 1 t! prdata2 [20] $end
$var wire 1 u! prdata2 [19] $end
$var wire 1 v! prdata2 [18] $end
$var wire 1 w! prdata2 [17] $end
$var wire 1 x! prdata2 [16] $end
$var wire 1 y! prdata2 [15] $end
$var wire 1 z! prdata2 [14] $end
$var wire 1 {! prdata2 [13] $end
$var wire 1 |! prdata2 [12] $end
$var wire 1 }! prdata2 [11] $end
$var wire 1 ~! prdata2 [10] $end
$var wire 1 !" prdata2 [9] $end
$var wire 1 "" prdata2 [8] $end
$var wire 1 #" prdata2 [7] $end
$var wire 1 $" prdata2 [6] $end
$var wire 1 %" prdata2 [5] $end
$var wire 1 &" prdata2 [4] $end
$var wire 1 '" prdata2 [3] $end
$var wire 1 (" prdata2 [2] $end
$var wire 1 )" prdata2 [1] $end
$var wire 1 *" prdata2 [0] $end
$var wire 1 +" pready1 $end
$var wire 1 ," pready2 $end
$var wire 1 -" pwrite_slave $end
$var wire 1 ." penable_slave $end
$scope module dut_mas $end
$var parameter 2 /" IDLE $end
$var parameter 2 0" SETUP $end
$var parameter 2 1" Access $end
$var wire 1 L pclk $end
$var wire 1 M penable_master $end
$var wire 1 N pwrite_Master $end
$var wire 1 O transfer_Master $end
$var wire 1 P Reset $end
$var wire 1 { Psel [1] $end
$var wire 1 | Psel [0] $end
$var wire 1 Q write_paddr_Master [4] $end
$var wire 1 R write_paddr_Master [3] $end
$var wire 1 S write_paddr_Master [2] $end
$var wire 1 T write_paddr_Master [1] $end
$var wire 1 U write_paddr_Master [0] $end
$var wire 1 V read_paddr_Master [4] $end
$var wire 1 W read_paddr_Master [3] $end
$var wire 1 X read_paddr_Master [2] $end
$var wire 1 Y read_paddr_Master [1] $end
$var wire 1 Z read_paddr_Master [0] $end
$var wire 1 [ write_data_Master [31] $end
$var wire 1 \ write_data_Master [30] $end
$var wire 1 ] write_data_Master [29] $end
$var wire 1 ^ write_data_Master [28] $end
$var wire 1 _ write_data_Master [27] $end
$var wire 1 ` write_data_Master [26] $end
$var wire 1 a write_data_Master [25] $end
$var wire 1 b write_data_Master [24] $end
$var wire 1 c write_data_Master [23] $end
$var wire 1 d write_data_Master [22] $end
$var wire 1 e write_data_Master [21] $end
$var wire 1 f write_data_Master [20] $end
$var wire 1 g write_data_Master [19] $end
$var wire 1 h write_data_Master [18] $end
$var wire 1 i write_data_Master [17] $end
$var wire 1 j write_data_Master [16] $end
$var wire 1 k write_data_Master [15] $end
$var wire 1 l write_data_Master [14] $end
$var wire 1 m write_data_Master [13] $end
$var wire 1 n write_data_Master [12] $end
$var wire 1 o write_data_Master [11] $end
$var wire 1 p write_data_Master [10] $end
$var wire 1 q write_data_Master [9] $end
$var wire 1 r write_data_Master [8] $end
$var wire 1 s write_data_Master [7] $end
$var wire 1 t write_data_Master [6] $end
$var wire 1 u write_data_Master [5] $end
$var wire 1 v write_data_Master [4] $end
$var wire 1 w write_data_Master [3] $end
$var wire 1 x write_data_Master [2] $end
$var wire 1 y write_data_Master [1] $end
$var wire 1 z write_data_Master [0] $end
$var wire 1 2" pready_slave $end
$var wire 1 3" prdata [31] $end
$var wire 1 4" prdata [30] $end
$var wire 1 5" prdata [29] $end
$var wire 1 6" prdata [28] $end
$var wire 1 7" prdata [27] $end
$var wire 1 8" prdata [26] $end
$var wire 1 9" prdata [25] $end
$var wire 1 :" prdata [24] $end
$var wire 1 ;" prdata [23] $end
$var wire 1 <" prdata [22] $end
$var wire 1 =" prdata [21] $end
$var wire 1 >" prdata [20] $end
$var wire 1 ?" prdata [19] $end
$var wire 1 @" prdata [18] $end
$var wire 1 A" prdata [17] $end
$var wire 1 B" prdata [16] $end
$var wire 1 C" prdata [15] $end
$var wire 1 D" prdata [14] $end
$var wire 1 E" prdata [13] $end
$var wire 1 F" prdata [12] $end
$var wire 1 G" prdata [11] $end
$var wire 1 H" prdata [10] $end
$var wire 1 I" prdata [9] $end
$var wire 1 J" prdata [8] $end
$var wire 1 K" prdata [7] $end
$var wire 1 L" prdata [6] $end
$var wire 1 M" prdata [5] $end
$var wire 1 N" prdata [4] $end
$var wire 1 O" prdata [3] $end
$var wire 1 P" prdata [2] $end
$var wire 1 Q" prdata [1] $end
$var wire 1 R" prdata [0] $end
$var reg 1 S" pwrite $end
$var reg 1 T" penable $end
$var reg 32 U" pwdata [31:0] $end
$var reg 5 V" paddr [4:0] $end
$var reg 1 W" PSEL1 $end
$var reg 1 X" PSEL2 $end
$var reg 32 Y" apb_read_data [31:0] $end
$var reg 3 Z" CurrentState [2:0] $end
$var reg 3 [" NextState [2:0] $end
$upscope $end
$scope module g1 $end
$var wire 1 L PCLK $end
$var wire 1 ." PENABLE $end
$var wire 1 -" PWRITE $end
$var wire 1 G! Psel $end
$var wire 1 P PRESETn $end
$var wire 1 "! PWDATA [31] $end
$var wire 1 #! PWDATA [30] $end
$var wire 1 $! PWDATA [29] $end
$var wire 1 %! PWDATA [28] $end
$var wire 1 &! PWDATA [27] $end
$var wire 1 '! PWDATA [26] $end
$var wire 1 (! PWDATA [25] $end
$var wire 1 )! PWDATA [24] $end
$var wire 1 *! PWDATA [23] $end
$var wire 1 +! PWDATA [22] $end
$var wire 1 ,! PWDATA [21] $end
$var wire 1 -! PWDATA [20] $end
$var wire 1 .! PWDATA [19] $end
$var wire 1 /! PWDATA [18] $end
$var wire 1 0! PWDATA [17] $end
$var wire 1 1! PWDATA [16] $end
$var wire 1 2! PWDATA [15] $end
$var wire 1 3! PWDATA [14] $end
$var wire 1 4! PWDATA [13] $end
$var wire 1 5! PWDATA [12] $end
$var wire 1 6! PWDATA [11] $end
$var wire 1 7! PWDATA [10] $end
$var wire 1 8! PWDATA [9] $end
$var wire 1 9! PWDATA [8] $end
$var wire 1 :! PWDATA [7] $end
$var wire 1 ;! PWDATA [6] $end
$var wire 1 <! PWDATA [5] $end
$var wire 1 =! PWDATA [4] $end
$var wire 1 >! PWDATA [3] $end
$var wire 1 ?! PWDATA [2] $end
$var wire 1 @! PWDATA [1] $end
$var wire 1 A! PWDATA [0] $end
$var wire 1 B! PADDR [4] $end
$var wire 1 C! PADDR [3] $end
$var wire 1 D! PADDR [2] $end
$var wire 1 E! PADDR [1] $end
$var wire 1 F! PADDR [0] $end
$var reg 1 \" PREADY $end
$var reg 32 ]" GPIO_OUTData [31:0] $end
$var reg 5 ^" read_address [4:0] $end
$upscope $end
$scope module uart $end
$var wire 1 _" PADDR [31] $end
$var wire 1 `" PADDR [30] $end
$var wire 1 a" PADDR [29] $end
$var wire 1 b" PADDR [28] $end
$var wire 1 c" PADDR [27] $end
$var wire 1 d" PADDR [26] $end
$var wire 1 e" PADDR [25] $end
$var wire 1 f" PADDR [24] $end
$var wire 1 g" PADDR [23] $end
$var wire 1 h" PADDR [22] $end
$var wire 1 i" PADDR [21] $end
$var wire 1 j" PADDR [20] $end
$var wire 1 k" PADDR [19] $end
$var wire 1 l" PADDR [18] $end
$var wire 1 m" PADDR [17] $end
$var wire 1 n" PADDR [16] $end
$var wire 1 o" PADDR [15] $end
$var wire 1 p" PADDR [14] $end
$var wire 1 q" PADDR [13] $end
$var wire 1 r" PADDR [12] $end
$var wire 1 s" PADDR [11] $end
$var wire 1 t" PADDR [10] $end
$var wire 1 u" PADDR [9] $end
$var wire 1 v" PADDR [8] $end
$var wire 1 w" PADDR [7] $end
$var wire 1 x" PADDR [6] $end
$var wire 1 y" PADDR [5] $end
$var wire 1 Q PADDR [4] $end
$var wire 1 R PADDR [3] $end
$var wire 1 S PADDR [2] $end
$var wire 1 T PADDR [1] $end
$var wire 1 U PADDR [0] $end
$var wire 1 [ PWDATA [31] $end
$var wire 1 \ PWDATA [30] $end
$var wire 1 ] PWDATA [29] $end
$var wire 1 ^ PWDATA [28] $end
$var wire 1 _ PWDATA [27] $end
$var wire 1 ` PWDATA [26] $end
$var wire 1 a PWDATA [25] $end
$var wire 1 b PWDATA [24] $end
$var wire 1 c PWDATA [23] $end
$var wire 1 d PWDATA [22] $end
$var wire 1 e PWDATA [21] $end
$var wire 1 f PWDATA [20] $end
$var wire 1 g PWDATA [19] $end
$var wire 1 h PWDATA [18] $end
$var wire 1 i PWDATA [17] $end
$var wire 1 j PWDATA [16] $end
$var wire 1 k PWDATA [15] $end
$var wire 1 l PWDATA [14] $end
$var wire 1 m PWDATA [13] $end
$var wire 1 n PWDATA [12] $end
$var wire 1 o PWDATA [11] $end
$var wire 1 p PWDATA [10] $end
$var wire 1 q PWDATA [9] $end
$var wire 1 r PWDATA [8] $end
$var wire 1 s PWDATA [7] $end
$var wire 1 t PWDATA [6] $end
$var wire 1 u PWDATA [5] $end
$var wire 1 v PWDATA [4] $end
$var wire 1 w PWDATA [3] $end
$var wire 1 x PWDATA [2] $end
$var wire 1 y PWDATA [1] $end
$var wire 1 z PWDATA [0] $end
$var wire 1 + PRDATA [31] $end
$var wire 1 , PRDATA [30] $end
$var wire 1 - PRDATA [29] $end
$var wire 1 . PRDATA [28] $end
$var wire 1 / PRDATA [27] $end
$var wire 1 0 PRDATA [26] $end
$var wire 1 1 PRDATA [25] $end
$var wire 1 2 PRDATA [24] $end
$var wire 1 3 PRDATA [23] $end
$var wire 1 4 PRDATA [22] $end
$var wire 1 5 PRDATA [21] $end
$var wire 1 6 PRDATA [20] $end
$var wire 1 7 PRDATA [19] $end
$var wire 1 8 PRDATA [18] $end
$var wire 1 9 PRDATA [17] $end
$var wire 1 : PRDATA [16] $end
$var wire 1 ; PRDATA [15] $end
$var wire 1 < PRDATA [14] $end
$var wire 1 = PRDATA [13] $end
$var wire 1 > PRDATA [12] $end
$var wire 1 ? PRDATA [11] $end
$var wire 1 @ PRDATA [10] $end
$var wire 1 A PRDATA [9] $end
$var wire 1 B PRDATA [8] $end
$var wire 1 C PRDATA [7] $end
$var wire 1 D PRDATA [6] $end
$var wire 1 E PRDATA [5] $end
$var wire 1 F PRDATA [4] $end
$var wire 1 G PRDATA [3] $end
$var wire 1 H PRDATA [2] $end
$var wire 1 I PRDATA [1] $end
$var wire 1 J PRDATA [0] $end
$var wire 1 H! PSELx $end
$var wire 1 M PENABLE $end
$var wire 1 N PWRITE $end
$var wire 1 P PRESETn $end
$var wire 1 ," PREADY $end
$var wire 1 L PCLK $end
$var wire 1 } rx $end
$var wire 1 z" tx $end
$scope module uart $end
$var wire 1 {" baud_final_value [10] $end
$var wire 1 |" baud_final_value [9] $end
$var wire 1 }" baud_final_value [8] $end
$var wire 1 ~" baud_final_value [7] $end
$var wire 1 !# baud_final_value [6] $end
$var wire 1 "# baud_final_value [5] $end
$var wire 1 ## baud_final_value [4] $end
$var wire 1 $# baud_final_value [3] $end
$var wire 1 %# baud_final_value [2] $end
$var wire 1 &# baud_final_value [1] $end
$var wire 1 '# baud_final_value [0] $end
$var wire 1 (# tx_fifo_dataIn [7] $end
$var wire 1 )# tx_fifo_dataIn [6] $end
$var wire 1 *# tx_fifo_dataIn [5] $end
$var wire 1 +# tx_fifo_dataIn [4] $end
$var wire 1 ,# tx_fifo_dataIn [3] $end
$var wire 1 -# tx_fifo_dataIn [2] $end
$var wire 1 .# tx_fifo_dataIn [1] $end
$var wire 1 /# tx_fifo_dataIn [0] $end
$var wire 1 L clk $end
$var wire 1 0# reset $end
$var wire 1 1# tx_fifo_writeEn $end
$var wire 1 2# rx_fifo_readEn $end
$var wire 1 } rx $end
$var wire 1 3# tx_fifo_Full $end
$var wire 1 z" tx $end
$var wire 1 4# rx_fifo_Empty $end
$var wire 1 5# rx_fifo_dataOut [7] $end
$var wire 1 6# rx_fifo_dataOut [6] $end
$var wire 1 7# rx_fifo_dataOut [5] $end
$var wire 1 8# rx_fifo_dataOut [4] $end
$var wire 1 9# rx_fifo_dataOut [3] $end
$var wire 1 :# rx_fifo_dataOut [2] $end
$var wire 1 ;# rx_fifo_dataOut [1] $end
$var wire 1 <# rx_fifo_dataOut [0] $end
$scope module baud_generator $end
$var wire 1 L clk $end
$var wire 1 0# reset $end
$var wire 1 {" divsr [10] $end
$var wire 1 |" divsr [9] $end
$var wire 1 }" divsr [8] $end
$var wire 1 ~" divsr [7] $end
$var wire 1 !# divsr [6] $end
$var wire 1 "# divsr [5] $end
$var wire 1 ## divsr [4] $end
$var wire 1 $# divsr [3] $end
$var wire 1 %# divsr [2] $end
$var wire 1 &# divsr [1] $end
$var wire 1 '# divsr [0] $end
$var reg 1 =# tick $end
$var reg 11 ># count [10:0] $end
$upscope $end
$scope module tx_fifo $end
$var wire 1 L clk $end
$var wire 1 ?# readEn $end
$var wire 1 1# writeEn $end
$var wire 1 0# reset $end
$var wire 1 @# EMPTY $end
$var wire 1 3# FULL $end
$var wire 1 (# dataIn [7] $end
$var wire 1 )# dataIn [6] $end
$var wire 1 *# dataIn [5] $end
$var wire 1 +# dataIn [4] $end
$var wire 1 ,# dataIn [3] $end
$var wire 1 -# dataIn [2] $end
$var wire 1 .# dataIn [1] $end
$var wire 1 /# dataIn [0] $end
$var reg 8 A# dataOut [7:0] $end
$var reg 4 B# counter [3:0] $end
$var reg 3 C# readPtr [2:0] $end
$var reg 3 D# writePtr [2:0] $end
$upscope $end
$scope module transmitter $end
$var parameter 32 E# DBit $end
$var parameter 32 F# SBit $end
$var parameter 32 G# IDLE $end
$var parameter 32 H# Start $end
$var parameter 32 I# Data $end
$var parameter 32 J# Stop $end
$var wire 1 K# tx_start $end
$var wire 1 L# s_tick $end
$var wire 1 M# tx_dataIn [7] $end
$var wire 1 N# tx_dataIn [6] $end
$var wire 1 O# tx_dataIn [5] $end
$var wire 1 P# tx_dataIn [4] $end
$var wire 1 Q# tx_dataIn [3] $end
$var wire 1 R# tx_dataIn [2] $end
$var wire 1 S# tx_dataIn [1] $end
$var wire 1 T# tx_dataIn [0] $end
$var reg 1 U# tx_done_tick $end
$var reg 1 V# tx_dataOut $end
$var reg 2 W# state [1:0] $end
$var reg 4 X# tickCounter [3:0] $end
$var reg 3 Y# n [2:0] $end
$var reg 8 Z# data [7:0] $end
$upscope $end
$scope module rx_fifo $end
$var wire 1 L clk $end
$var wire 1 2# readEn $end
$var wire 1 [# writeEn $end
$var wire 1 0# reset $end
$var wire 1 4# EMPTY $end
$var wire 1 \# FULL $end
$var wire 1 ]# dataIn [7] $end
$var wire 1 ^# dataIn [6] $end
$var wire 1 _# dataIn [5] $end
$var wire 1 `# dataIn [4] $end
$var wire 1 a# dataIn [3] $end
$var wire 1 b# dataIn [2] $end
$var wire 1 c# dataIn [1] $end
$var wire 1 d# dataIn [0] $end
$var reg 8 e# dataOut [7:0] $end
$var reg 4 f# counter [3:0] $end
$var reg 3 g# readPtr [2:0] $end
$var reg 3 h# writePtr [2:0] $end
$upscope $end
$scope module receiver $end
$var parameter 32 i# numberOfDataBits $end
$var parameter 32 j# stopBitTicks $end
$var wire 1 L clk $end
$var wire 1 } rx $end
$var wire 1 k# s_tick $end
$var reg 8 l# rx_dataOut [7:0] $end
$var reg 1 m# rx_doneTick $end
$var reg 2 n# state [1:0] $end
$var reg 4 o# tickCounter [3:0] $end
$var reg 3 p# receivedBitsCounter [2:0] $end
$var reg 8 q# recieverBuffer [7:0] $end
$upscope $end
$upscope $end
$scope module interface $end
$var parameter 32 r# holdDuration $end
$var wire 1 L PCLK $end
$var wire 1 P PRESETn $end
$var wire 1 _" PADDR [31] $end
$var wire 1 `" PADDR [30] $end
$var wire 1 a" PADDR [29] $end
$var wire 1 b" PADDR [28] $end
$var wire 1 c" PADDR [27] $end
$var wire 1 d" PADDR [26] $end
$var wire 1 e" PADDR [25] $end
$var wire 1 f" PADDR [24] $end
$var wire 1 g" PADDR [23] $end
$var wire 1 h" PADDR [22] $end
$var wire 1 i" PADDR [21] $end
$var wire 1 j" PADDR [20] $end
$var wire 1 k" PADDR [19] $end
$var wire 1 l" PADDR [18] $end
$var wire 1 m" PADDR [17] $end
$var wire 1 n" PADDR [16] $end
$var wire 1 o" PADDR [15] $end
$var wire 1 p" PADDR [14] $end
$var wire 1 q" PADDR [13] $end
$var wire 1 r" PADDR [12] $end
$var wire 1 s" PADDR [11] $end
$var wire 1 t" PADDR [10] $end
$var wire 1 u" PADDR [9] $end
$var wire 1 v" PADDR [8] $end
$var wire 1 w" PADDR [7] $end
$var wire 1 x" PADDR [6] $end
$var wire 1 y" PADDR [5] $end
$var wire 1 Q PADDR [4] $end
$var wire 1 R PADDR [3] $end
$var wire 1 S PADDR [2] $end
$var wire 1 T PADDR [1] $end
$var wire 1 U PADDR [0] $end
$var wire 1 [ PWDATA [31] $end
$var wire 1 \ PWDATA [30] $end
$var wire 1 ] PWDATA [29] $end
$var wire 1 ^ PWDATA [28] $end
$var wire 1 _ PWDATA [27] $end
$var wire 1 ` PWDATA [26] $end
$var wire 1 a PWDATA [25] $end
$var wire 1 b PWDATA [24] $end
$var wire 1 c PWDATA [23] $end
$var wire 1 d PWDATA [22] $end
$var wire 1 e PWDATA [21] $end
$var wire 1 f PWDATA [20] $end
$var wire 1 g PWDATA [19] $end
$var wire 1 h PWDATA [18] $end
$var wire 1 i PWDATA [17] $end
$var wire 1 j PWDATA [16] $end
$var wire 1 k PWDATA [15] $end
$var wire 1 l PWDATA [14] $end
$var wire 1 m PWDATA [13] $end
$var wire 1 n PWDATA [12] $end
$var wire 1 o PWDATA [11] $end
$var wire 1 p PWDATA [10] $end
$var wire 1 q PWDATA [9] $end
$var wire 1 r PWDATA [8] $end
$var wire 1 s PWDATA [7] $end
$var wire 1 t PWDATA [6] $end
$var wire 1 u PWDATA [5] $end
$var wire 1 v PWDATA [4] $end
$var wire 1 w PWDATA [3] $end
$var wire 1 x PWDATA [2] $end
$var wire 1 y PWDATA [1] $end
$var wire 1 z PWDATA [0] $end
$var wire 1 H! PSELx $end
$var wire 1 N PWRITE $end
$var wire 1 M PENABLE $end
$var wire 1 + PRDATA [31] $end
$var wire 1 , PRDATA [30] $end
$var wire 1 - PRDATA [29] $end
$var wire 1 . PRDATA [28] $end
$var wire 1 / PRDATA [27] $end
$var wire 1 0 PRDATA [26] $end
$var wire 1 1 PRDATA [25] $end
$var wire 1 2 PRDATA [24] $end
$var wire 1 3 PRDATA [23] $end
$var wire 1 4 PRDATA [22] $end
$var wire 1 5 PRDATA [21] $end
$var wire 1 6 PRDATA [20] $end
$var wire 1 7 PRDATA [19] $end
$var wire 1 8 PRDATA [18] $end
$var wire 1 9 PRDATA [17] $end
$var wire 1 : PRDATA [16] $end
$var wire 1 ; PRDATA [15] $end
$var wire 1 < PRDATA [14] $end
$var wire 1 = PRDATA [13] $end
$var wire 1 > PRDATA [12] $end
$var wire 1 ? PRDATA [11] $end
$var wire 1 @ PRDATA [10] $end
$var wire 1 A PRDATA [9] $end
$var wire 1 B PRDATA [8] $end
$var wire 1 C PRDATA [7] $end
$var wire 1 D PRDATA [6] $end
$var wire 1 E PRDATA [5] $end
$var wire 1 F PRDATA [4] $end
$var wire 1 G PRDATA [3] $end
$var wire 1 H PRDATA [2] $end
$var wire 1 I PRDATA [1] $end
$var wire 1 J PRDATA [0] $end
$var reg 1 s# PREADY $end
$var wire 1 5# rx_fifo_dataOut [7] $end
$var wire 1 6# rx_fifo_dataOut [6] $end
$var wire 1 7# rx_fifo_dataOut [5] $end
$var wire 1 8# rx_fifo_dataOut [4] $end
$var wire 1 9# rx_fifo_dataOut [3] $end
$var wire 1 :# rx_fifo_dataOut [2] $end
$var wire 1 ;# rx_fifo_dataOut [1] $end
$var wire 1 <# rx_fifo_dataOut [0] $end
$var wire 1 t# rx_fifo_Full $end
$var wire 1 4# rx_fifo_Empty $end
$var wire 1 3# tx_fifo_Full $end
$var reg 1 u# tx_fifo_writeEn $end
$var reg 1 v# rx_fifo_readEn $end
$var wire 1 (# tx_fifo_dataIn [7] $end
$var wire 1 )# tx_fifo_dataIn [6] $end
$var wire 1 *# tx_fifo_dataIn [5] $end
$var wire 1 +# tx_fifo_dataIn [4] $end
$var wire 1 ,# tx_fifo_dataIn [3] $end
$var wire 1 -# tx_fifo_dataIn [2] $end
$var wire 1 .# tx_fifo_dataIn [1] $end
$var wire 1 /# tx_fifo_dataIn [0] $end
$var reg 1 w# reset $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
0#
0$
0%
b0 &
b0 '
b0 (
b0 )
1*
0~
b0 !!
0S"
0T"
bx U"
bx V"
0W"
0X"
bx Y"
b0 Z"
b0 ["
0\"
bx ]"
bx ^"
x=#
b0 >#
bx A#
b0 B#
b0 C#
b0 D#
0U#
1V#
b0 W#
b0 X#
b0 Y#
b0 Z#
bx e#
b0 f#
b0 g#
b0 h#
b0 l#
0m#
b0 n#
b0 o#
b0 p#
b0 q#
0s#
0u#
0v#
0w#
b0 /"
b1 0"
b10 1"
b1000 E#
b10000 F#
b0 G#
b1 H#
b10 I#
b11 J#
b1000 i#
b10000 j#
b1111 r#
bx K
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
x)!
x(!
x'!
x&!
x%!
x$!
x#!
x"!
xF!
xE!
xD!
xC!
xB!
0G!
0H!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
xI!
z*"
z)"
z("
z'"
z&"
z%"
z$"
z#"
z""
z!"
z~!
z}!
z|!
z{!
zz!
zy!
zx!
zw!
zv!
zu!
zt!
zs!
zr!
zq!
zp!
zo!
zn!
zm!
zl!
zk!
zj!
zi!
0+"
0,"
0-"
0."
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
03#
1@#
14#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
1}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
zy"
zx"
zw"
zv"
zu"
zt"
zs"
zr"
zq"
zp"
zo"
zn"
zm"
zl"
zk"
zj"
zi"
zh"
zg"
zf"
ze"
zd"
zc"
zb"
za"
z`"
z_"
1z"
0'#
1&#
0%#
1$#
0##
0"#
0!#
1~"
0}"
1|"
0{"
01#
02#
00#
0K#
0?#
xL#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0[#
0\#
xk#
zt#
$end
#5
1!
1L
b1 >#
0=#
0k#
0L#
#10
0!
0L
#15
1!
1L
b10 >#
#20
0!
0L
#25
1!
1L
b11 >#
#30
b1 )
1$
1"
1#
b1 &
b10101011110011010001001000110100 (
1M
1N
1x
1v
1u
1q
1n
1j
1h
1g
1d
1c
1b
1a
1_
1]
1[
1U
1-#
1+#
1*#
1|
1O
0!
1S"
b1 ["
bx !!
1W"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
0L
1-"
1G!
#35
1!
1L
b100 >#
b1 Z"
b1 V"
b10101011110011010001001000110100 U"
b10 ["
0A!
0@!
1?!
0>!
1=!
1<!
0;!
0:!
09!
18!
07!
06!
15!
04!
03!
02!
11!
00!
1/!
1.!
0-!
0,!
1+!
1*!
1)!
1(!
0'!
1&!
0%!
1$!
0#!
1"!
1F!
0E!
0D!
0C!
0B!
#40
0!
0L
#45
1!
1L
b101 >#
b10 Z"
1T"
1."
b1 ^"
1\"
1+"
1~
12"
b1 ["
#50
0!
0L
#55
1!
1L
b110 >#
b1 Z"
0T"
0."
b10 ["
0\"
0+"
0~
02"
#60
0#
b1 '
0N
1Z
0!
0L
#65
1!
1L
b111 >#
b10 Z"
1T"
1."
0S"
1\"
0-"
1+"
1~
b10101011110011010001001000110100 ]"
12"
0h!
0g!
1f!
0e!
1d!
1c!
0b!
0a!
0`!
1_!
0^!
0]!
1\!
0[!
0Z!
0Y!
1X!
0W!
1V!
1U!
0T!
0S!
1R!
1Q!
1P!
1O!
0N!
1M!
0L!
1K!
0J!
1I!
b10101011110011010001001000110100 !!
b1 ["
0R"
0Q"
1P"
0O"
1N"
1M"
0L"
0K"
0J"
1I"
0H"
0G"
1F"
0E"
0D"
0C"
1B"
0A"
1@"
1?"
0>"
0="
1<"
1;"
1:"
19"
08"
17"
06"
15"
04"
13"
#70
0!
0L
#75
1!
1L
b1000 >#
b1 Z"
0T"
0."
b10 ["
0\"
0+"
0~
02"
#80
0!
0L
#85
1!
1L
b1001 >#
b10 Z"
1T"
1."
1\"
1+"
1~
12"
b10101011110011010001001000110100 Y"
0B
1A
0@
0?
1>
0=
0<
0;
1:
09
18
17
06
05
14
13
12
11
00
1/
0.
1-
0,
1+
b1 ["
#90
1#
b10 &
b101010101010 (
1N
1y
0x
1w
0v
1s
1o
0n
0j
0h
0g
0d
0c
0b
0a
0_
0]
0[
0U
1T
1.#
0-#
1,#
0+#
1(#
0!
0L
#95
1!
1L
b1010 >#
b1 Z"
0T"
0."
1S"
b10 V"
b101010101010 U"
b10 ["
0\"
1-"
1@!
0?!
1>!
0=!
1:!
16!
05!
01!
0/!
0.!
0+!
0*!
0)!
0(!
0&!
0$!
0"!
0F!
1E!
0+"
0~
02"
#100
0!
0L
#105
1!
1L
b1011 >#
b10 Z"
1T"
1."
b10 ^"
1\"
1+"
1~
12"
b1 ["
#110
0!
0L
#115
1!
1L
b1100 >#
b1 Z"
0T"
0."
b10 ["
0\"
0+"
0~
02"
#120
0#
b10 '
0N
0Z
1Y
0!
0L
#125
1!
1L
b1101 >#
b10 Z"
1T"
1."
0S"
1\"
0-"
1+"
1~
b101010101010 ]"
12"
1g!
0f!
1e!
0d!
1a!
1]!
0\!
0X!
0V!
0U!
0R!
0Q!
0P!
0O!
0M!
0K!
0I!
b101010101010 !!
b1 ["
1Q"
0P"
1O"
0N"
1K"
1G"
0F"
0B"
0@"
0?"
0<"
0;"
0:"
09"
07"
05"
03"
#130
0!
0L
#135
1!
1L
b1110 >#
b1 Z"
0T"
0."
b10 ["
0\"
0+"
0~
02"
#140
0!
0L
#145
1!
1L
b1111 >#
b10 Z"
1T"
1."
1\"
1+"
1~
12"
b101010101010 Y"
1?
0>
0:
08
07
04
03
02
01
0/
0-
0+
b1 ["
#150
b0 )
0|
0!
0~
b0 !!
0W"
0Q"
0O"
0M"
0K"
0I"
0G"
0L
02"
0G!
0\"
0+"
#155
1!
1L
b10000 >#
b1 Z"
0T"
0."
b10 ["
#160
0!
0L
#165
1!
1L
b10001 >#
b10 Z"
#170
0!
0L
#175
1!
1L
b10010 >#
#180
0"
b10 )
0M
1{
0!
bz !!
1X"
zR"
zQ"
zP"
zO"
zN"
zM"
zL"
zK"
zJ"
zI"
zH"
zG"
zF"
zE"
zD"
zC"
zB"
zA"
z@"
z?"
z>"
z="
z<"
z;"
z:"
z9"
z8"
z7"
z6"
z5"
z4"
z3"
1H!
0L
#185
1!
1L
b10011 >#
#190
1#
b0 K
1N
0!
0L
#195
1!
1L
b10100 >#
#200
b11100011 (
1"
1z
0w
1t
0q
0o
1M
1/#
0,#
1)#
0!
0L
#205
1!
1L
b10101 >#
1s#
1u#
11#
1,"
1~
12"
1T"
1."
1S"
b1 ["
1-"
#210
0"
b1 K
0M
0!
0L
#215
1!
1L
b10110 >#
b1 B#
b1 D#
0@#
1K#
b1 Z"
0T"
0."
b11100011 U"
b10 ["
1A!
0>!
1;!
08!
06!
#220
0u#
b101011 (
1"
01#
1w
0t
0s
1M
1,#
0)#
0(#
0!
0L
#225
1!
1L
b10111 >#
1u#
11#
b10 Z"
1T"
1."
b1 ["
#230
0"
b10 K
0M
0!
0L
#235
1!
1L
b11000 >#
b10 B#
b10 D#
b1 Z"
0T"
0."
b101011 U"
b10 ["
1>!
0;!
0:!
#240
0u#
b1010110 (
1"
01#
0z
1x
0w
1v
0u
1t
1M
0/#
1-#
0,#
1+#
0*#
1)#
0!
0L
#245
1!
1L
b11001 >#
1u#
11#
b10 Z"
1T"
1."
b1 ["
#250
0"
b11 K
0M
0!
0L
#255
1!
1L
b11010 >#
b11 B#
b11 D#
b1 Z"
0T"
0."
b1010110 U"
b10 ["
0A!
1?!
0>!
1=!
0<!
1;!
#260
0u#
b1 (
1"
01#
1z
0y
0x
0v
0t
1M
1/#
0.#
0-#
0+#
0)#
0!
0L
#265
1!
1L
b11011 >#
1u#
11#
b10 Z"
1T"
1."
b1 ["
#270
0"
b100 K
0M
0!
0L
#275
1!
1L
b11100 >#
b100 B#
b100 D#
b1 Z"
0T"
0."
b1 U"
b10 ["
1A!
0@!
0?!
0=!
0;!
#280
0u#
b10000001 (
1"
01#
1s
1M
1(#
0!
0L
#285
1!
1L
b11101 >#
1u#
11#
b10 Z"
1T"
1."
b1 ["
#290
0"
b101 K
0M
0!
0L
#295
1!
1L
b11110 >#
b101 B#
b101 D#
b1 Z"
0T"
0."
b10000001 U"
b10 ["
1:!
#300
0u#
b11000100 (
1"
01#
0z
1x
1t
1M
0/#
1-#
1)#
0!
0L
#305
1!
1L
b11111 >#
1u#
11#
b10 Z"
1T"
1."
b1 ["
#310
0"
b110 K
0M
0!
0L
#315
1!
1L
b100000 >#
b110 B#
b110 D#
b1 Z"
0T"
0."
b11000100 U"
b10 ["
0A!
1?!
1;!
#320
0u#
b1010011 (
1"
01#
1z
1y
0x
1v
0s
1M
1/#
1.#
0-#
1+#
0(#
0!
0L
#325
1!
1L
b100001 >#
1u#
11#
b10 Z"
1T"
1."
b1 ["
#330
0"
b111 K
0M
0!
0L
#335
1!
1L
b100010 >#
b111 B#
b111 D#
b1 Z"
0T"
0."
b1010011 U"
b10 ["
1A!
1@!
0?!
1=!
0:!
#340
0u#
b11011110 (
1"
01#
0z
1x
1w
1s
1M
0/#
1-#
1,#
1(#
0!
0L
#345
1!
1L
b100011 >#
1u#
11#
b10 Z"
1T"
1."
b1 ["
#350
0"
b1000 K
0M
0!
0L
#355
1!
1L
b100100 >#
b1000 B#
b0 D#
13#
b1 Z"
0T"
0."
b11011110 U"
b10 ["
0A!
1?!
1>!
1:!
#360
0u#
b1110101 (
1"
01#
1z
0y
0w
1u
0s
1M
1/#
0.#
0,#
1*#
0(#
0!
0L
#365
1!
1L
b100101 >#
0s#
1u#
11#
0,"
b10 Z"
0~
02"
1T"
1."
#370
0"
b1001 K
0M
0!
0L
#375
1!
1L
b100110 >#
#380
0u#
b1001010 (
1"
01#
0z
1y
0x
1w
0v
0u
1M
0/#
1.#
0-#
1,#
0+#
0*#
0!
0L
#385
1!
1L
b100111 >#
1u#
11#
#390
0"
b1010 K
0M
0!
0L
#395
1!
1L
b101000 >#
#400
0u#
01#
0!
0L
#405
1!
1L
b101001 >#
#410
0!
0L
#415
1!
1L
b101010 >#
#420
0!
0L
#425
1!
1L
b101011 >#
#430
0!
0L
#435
1!
1L
b101100 >#
#440
0!
0L
#445
1!
1L
b101101 >#
#450
0!
0L
#455
1!
1L
b101110 >#
#460
0!
0L
#465
1!
1L
b101111 >#
#470
0!
0L
#475
1!
1L
b110000 >#
#480
0!
0L
#485
1!
1L
b110001 >#
#490
1"
0#
1M
0N
0!
0L
#495
1!
1L
b110010 >#
1v#
12#
#500
0!
0L
#503
0"
0M
#505
1!
1L
b110011 >#
#510
0v#
02#
0!
0L
#515
1!
1L
b110100 >#
#520
0!
0L
#525
1!
1L
b110101 >#
#530
0!
0L
#533
0*
0}
#535
1!
1L
b110110 >#
#540
0!
0L
#545
1!
1L
b110111 >#
#550
0!
0L
#555
1!
1L
b111000 >#
#560
0!
0L
#565
1!
1L
b111001 >#
#570
0!
0L
#575
1!
1L
b111010 >#
#580
0!
0L
#585
1!
1L
b111011 >#
#590
0!
0L
#595
1!
1L
b111100 >#
#600
0!
0L
#605
1!
1L
b111101 >#
#610
0!
0L
#615
1!
1L
b111110 >#
#620
0!
0L
#625
1!
1L
b111111 >#
#630
0!
0L
#635
1!
1L
b1000000 >#
#640
0!
0L
#645
1!
1L
b1000001 >#
#650
0!
0L
#655
1!
1L
b1000010 >#
#660
0!
0L
#665
1!
1L
b1000011 >#
#670
0!
0L
#675
1!
1L
b1000100 >#
#680
0!
0L
#685
1!
1L
b1000101 >#
#690
0!
0L
#695
1!
1L
b1000110 >#
#700
0!
0L
#705
1!
1L
b1000111 >#
#710
0!
0L
#715
1!
1L
b1001000 >#
#720
0!
0L
#725
1!
1L
b1001001 >#
#730
0!
0L
#735
1!
1L
b1001010 >#
#740
0!
0L
#745
1!
1L
b1001011 >#
#750
0!
0L
#755
1!
1L
b1001100 >#
#760
0!
0L
#765
1!
1L
b1001101 >#
#770
0!
0L
#775
1!
1L
b1001110 >#
#780
0!
0L
#785
1!
1L
b1001111 >#
#790
0!
0L
#795
1!
1L
b1010000 >#
#800
0!
0L
#805
1!
1L
b1010001 >#
#810
0!
0L
#815
1!
1L
b1010010 >#
#820
0!
0L
#825
1!
1L
b1010011 >#
#830
0!
0L
#835
1!
1L
b1010100 >#
#840
0!
0L
#845
1!
1L
b1010101 >#
#850
0!
0L
#855
1!
1L
b1010110 >#
#860
0!
0L
#865
1!
1L
b1010111 >#
#870
0!
0L
#875
1!
1L
b1011000 >#
#880
0!
0L
#885
1!
1L
b1011001 >#
#890
0!
0L
#895
1!
1L
b1011010 >#
#900
0!
0L
#905
1!
1L
b1011011 >#
#910
0!
0L
#915
1!
1L
b1011100 >#
#920
0!
0L
#925
1!
1L
b1011101 >#
#930
0!
0L
#935
1!
1L
b1011110 >#
#940
0!
0L
#945
1!
1L
b1011111 >#
#950
0!
0L
#955
1!
1L
b1100000 >#
#960
0!
0L
#965
1!
1L
b1100001 >#
#970
0!
0L
#975
1!
1L
b1100010 >#
#980
0!
0L
#985
1!
1L
b1100011 >#
#990
0!
0L
#995
1!
1L
b1100100 >#
#1000
0!
0L
